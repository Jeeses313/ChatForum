{"version":3,"sources":["queries/userqueries.js","reducers/notificationReducer.js","components/Notification.js","reducers/tokenReducer.js","reducers/userReducer.js","components/LoginForm.js","queries/chatqueries.js","queries/commentqueries.js","index.js","components/ChatListing.js","components/ChatForm.js","components/ChatsPage.js","components/ReportedChatsPage.js","components/Comment.js","components/ReportedCommentsPage.js","components/CommentForm.js","components/Chat.js","components/ChatPage.js","components/ProfilePage.js","components/ErrorPage.js","components/LoggedInPage.js","components/SigninForm.js","reducers/modeReducer.js","components/Navigationbar.js","App.js","store.js"],"names":["timeout","LOGIN","gql","SIGNIN","USER","SET_PROFILEPIC","DELETE_PROFILEPIC","setNotification","notification","time","dispatch","a","clearTimeout","setTimeout","type","reducer","state","action","Notification","useSelector","style","position","width","textAlign","zIndex","useDispatch","clearAlert","error","Alert","variant","className","onClick","message","setToken","token","data","setUser","user","LoginForm","useState","username","setUsername","password","setPassword","history","useHistory","mode","useMutation","onError","graphQLErrors","login","result","useEffect","value","localStorage","setItem","push","JSON","stringify","borderColor","backgroundColor","Form","onSubmit","event","preventDefault","variables","Label","Control","id","name","onChange","target","required","Button","to","CREATE_CHAT","DELETE_CHAT","CHATS","REPORTED_CHATS","CHAT","PINNED_CHATS","CHAT_ADDED","CHAT_REPORTED","CHAT_DELETED","PIN_CHAT","UNPIN_CHAT","REPORT_CHAT","UNREPORT_CHAT","ZEROREPORT_CHAT","wsLink","CREATE_COMMENT","REPORTED_COMMENTS","COMMENT_ADDED","DELETE_COMMENT","COMMENT_DELETED","EDIT_COMMENT","COMMENT_EDITED","COMMENT_REPORTED","REPORT_COMMENT","UNREPORT_COMMENT","ZEROREPORT_COMMENT","Chat","chat","isPinned","submitPin","submitUnpin","currentUser","latestComment","options","weekday","year","month","day","hour","minute","date","Date","toLocaleTimeString","content","length","substring","deleteChat","reportChat","reportResult","unreportChat","unreportResult","zeroReportChat","zeroReportResult","loading","called","borderStyle","borderRadius","padding","marginBottom","title","admin","reports","size","window","confirm","chatTitle","chatId","includes","ChatForm","setTitle","create","createChat","resize","Row","Col","md","paddingRight","as","rows","placeholder","block","paddingLeft","height","ChatsPage","chats","setChats","useLazyQuery","loadChats","chatsResult","loadPinnedChats","pinnedChatsResult","chatsToShow","setChatsToShow","filter","setFilter","pinnedChats","setPinnedChats","sortChats","useCallback","chatA","chatB","dateA","dateB","slice","sort","map","useSubscription","onSubscriptionData","newChat","subscriptionData","chatAdded","newChats","concat","newComment","commentAdded","comment","reportedChat","chatReported","toLowerCase","startsWith","pinChat","pinResult","unpinChat","unpinResult","pchat","deletedChat","chatDeleted","filterStyle","float","paddingBottom","display","overflowY","ChatListing","key","ReportedChatsPage","loadReportedChats","reportedChatsResult","reportedChats","Comment","setContent","editing","setEditing","imageUrl","setImageUrl","deleteComment","deleteResult","editComment","editResult","image","hasVideo","frameBorder","allowFullScreen","src","Image","fluid","profileImage","reportComment","unreportComment","zeroReportComment","contentBoxStyle","border","urlStyle","readOnly","commentId","endsWith","ReportedCommentsPage","comments","setComments","commentsToShow","setCommentsToShow","loadComments","commentsResult","commentsEndRef","useRef","sortComments","commentA","commentB","reportedComments","current","scrollIntoView","behavior","deletedComment","commentDeleted","editedComment","commentEdited","reportedComment","commentReported","newComments","ref","CommentForm","onCompleted","send","contentStyle","setChat","loadChat","chatResult","fontSize","ChatPage","match","useRouteMatch","params","ProfilePage","editImageUrl","setEditImageUrl","loadUser","userResult","setImage","setProfilePic","profilePicResult","setUserProfilePic","deleteProfilePic","deleteProfilePicResult","ErrorPage","errormessage","LoggedInPage","path","SigninForm","signin","createUser","setMode","Navigationbar","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","removeItem","App","document","body","left","top","combineReducers","notificationReducer","userReducer","tokenReducer","modeReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","authLink","setContext","_","headers","getItem","authorization","httpLink","HttpLink","uri","location","host","WebSocketLink","reconnect","splitLink","split","query","definition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","link","defaultOptions","watchQuery","fetchPolicy","mutation","loggedToken","loggedUser","parse","ReactDOM","render","ApolloProvider","getElementById"],"mappings":"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","file":"static/js/main.cb178f7f.chunk.js","sourcesContent":["import { gql } from '@apollo/client'\r\n\r\nexport const LOGIN = gql`\r\n    mutation login($username: String!, $password: String!) {\r\n        login(username: $username, password: $password)  {\r\n            value\r\n            user {\r\n                id\r\n                username\r\n                pinnedChats {\r\n                    title\r\n                }\r\n                admin\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const SIGNIN = gql`\r\n    mutation createUser($username: String!, $password: String!) {\r\n        createUser(username: $username, password: $password)  {\r\n            value\r\n            user {\r\n                id\r\n                username\r\n                pinnedChats {\r\n                    title\r\n                }\r\n                admin\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const USER = gql`\r\n    query user($username: String!) {\r\n        user(username: $username)  {\r\n            username\r\n            imageUrl\r\n        }\r\n    }\r\n`\r\n\r\nexport const SET_PROFILEPIC = gql`\r\nmutation setUserProfilePic($imageUrl: String!) {\r\n    setUserProfilePic(imageUrl: $imageUrl)  {\r\n        username\r\n        imageUrl\r\n    }\r\n}\r\n`\r\n\r\nexport const DELETE_PROFILEPIC = gql`\r\nmutation deleteUserProfilePic {\r\n    deleteUserProfilePic {\r\n        username\r\n        imageUrl\r\n    }\r\n}\r\n`","const reducer = (state = '', action) => {\r\n    switch (action.type) {\r\n        case 'SET NOTIFICATION': {\r\n            return action.notification\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nlet timeout\r\n\r\nexport const setNotification = (notification, time) => {\r\n    return async dispatch => {\r\n        if (notification !== '') {\r\n            clearTimeout(timeout)\r\n            timeout = setTimeout(() => {\r\n                dispatch(setNotification(''))\r\n            }, time * 1000)\r\n        }\r\n        dispatch({\r\n            type: 'SET NOTIFICATION',\r\n            notification: notification\r\n        })\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst Notification = () => {\r\n    const notification = useSelector(state => state.notification)\r\n    const style = { position: 'absolute', width: '100%', textAlign: 'center', zIndex:9999 }\r\n    const dispatch = useDispatch()\r\n    const clearAlert = () => {\r\n        dispatch(setNotification(''))\r\n    }\r\n    if (notification === '') {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n    if (notification.error) {\r\n        return (\r\n            <Alert style={style} variant=\"danger\" className='errormessage' onClick={clearAlert}>{notification.message}</Alert>\r\n        )\r\n    }\r\n    return (\r\n        <Alert style={style} variant=\"success\" className='message' onClick={clearAlert}>{notification.message}</Alert>\r\n    )\r\n}\r\n\r\nexport default Notification","const reducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'SET_TOKEN': {\r\n            return action.data\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setToken = (token) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_TOKEN',\r\n            data: token\r\n        })\r\n    }\r\n}\r\n\r\nexport default reducer","const reducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'SET_USER': {\r\n            return action.data\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n    return async dispatch => {\r\n\r\n        dispatch({\r\n            type: 'SET_USER',\r\n            data: user\r\n        })\r\n    }\r\n}\r\n\r\nexport default reducer","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN } from '../queries/userqueries'\r\nimport Notification from './Notification'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { setToken } from '../reducers/tokenReducer'\r\nimport { setUser } from '../reducers/userReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, Link } from 'react-router-dom'\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const mode = useSelector(state => state.mode)\r\n    const [login, result] = useMutation(LOGIN, {\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    useEffect(() => {\r\n        if (result.data) {\r\n            const token = result.data.login.value\r\n            const user = result.data.login.user\r\n            dispatch(setToken(token))\r\n            localStorage.setItem('user-token', token)\r\n            history.push('/')\r\n            localStorage.setItem('logged-user', JSON.stringify(user))\r\n            dispatch(setUser(user))\r\n            dispatch(setNotification({ message: 'Logged in', error: false }, 10))\r\n        }\r\n    }, [result.data]) // eslint-disable-line\r\n    const submit = (event) => {\r\n        event.preventDefault()\r\n        login({ variables: { username, password } })\r\n        setUsername('')\r\n        setPassword('')\r\n    }\r\n    const style = { borderColor: 'grey' }\r\n    if (mode === 'light') {\r\n        style.backgroundColor = 'white'\r\n    } else {\r\n        style.backgroundColor = 'darkgray'\r\n    }\r\n    return (\r\n        <>\r\n            <Notification></Notification>\r\n            <div className='container'>\r\n                <h2>Login</h2>\r\n                <Form onSubmit={submit}>\r\n                    <Form.Label>username:</Form.Label>\r\n                    <Form.Control type=\"text\" id='username' style={style} value={username} name=\"username\" onChange={({ target }) => setUsername(target.value)} required />\r\n                    <Form.Label>password:</Form.Label>\r\n                    <Form.Control type=\"password\" id='password' style={style} value={password} name=\"password\" onChange={({ target }) => setPassword(target.value)} required />\r\n                    <Button id='submit' type=\"submit\">login</Button> or <Link to='/signin'>sign in</Link>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import { gql } from '@apollo/client'\r\n\r\nexport const CREATE_CHAT = gql`\r\n    mutation createChat($chatTitle: String!) {\r\n        createChat(chatTitle: $chatTitle)  {\r\n            title\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_CHAT = gql`\r\n    mutation deleteChat($chatId: String!) {\r\n        deleteChat(chatId: $chatId)  {\r\n            title\r\n        }\r\n    }\r\n`\r\n\r\nexport const CHATS = gql`\r\n    query {\r\n        chats {\r\n            title\r\n            latestComment{\r\n                content\r\n                date\r\n                user{\r\n                    username\r\n                }\r\n            }\r\n            id\r\n            date\r\n            reports\r\n        }\r\n    }\r\n`\r\n\r\nexport const REPORTED_CHATS = gql`\r\n    query {\r\n        reportedChats {\r\n            title\r\n            latestComment{\r\n                content\r\n                date\r\n                user{\r\n                    username\r\n                }\r\n            }\r\n            id\r\n            date\r\n            reports\r\n        }\r\n    }\r\n`\r\n\r\nexport const CHAT = gql`\r\n    query chat($chatTitle: String!){\r\n        chat(chatTitle: $chatTitle) {\r\n            comments {\r\n                user { \r\n                    username\r\n                    imageUrl\r\n                }\r\n                date\r\n                content\r\n                imageUrl\r\n                hasVideo\r\n                reports\r\n                id\r\n            }\r\n            title\r\n            reports\r\n        }\r\n    }\r\n`\r\n\r\nexport const PINNED_CHATS = gql`\r\n    query {\r\n        pinnedChats {\r\n            title\r\n        }\r\n    }\r\n`\r\n\r\nexport const CHAT_ADDED = gql`\r\n    subscription {\r\n        chatAdded {\r\n            title\r\n            latestComment {\r\n                content\r\n                date\r\n                user {\r\n                    username\r\n                }\r\n            }\r\n            date\r\n            id\r\n            reports\r\n        }\r\n    }\r\n`\r\n\r\nexport const CHAT_REPORTED = gql`\r\n    subscription {\r\n        chatReported {\r\n            title\r\n            id\r\n            latestComment {\r\n                content\r\n                date\r\n                user {\r\n                    username\r\n                }\r\n            }\r\n            comments{\r\n                user { \r\n                    username\r\n                    imageUrl\r\n                }\r\n                date\r\n                content\r\n                imageUrl\r\n                hasVideo\r\n                reports\r\n                id\r\n            }\r\n            date\r\n            reports\r\n        }\r\n    }\r\n`\r\n\r\nexport const CHAT_DELETED = gql`\r\n    subscription {\r\n        chatDeleted {\r\n            title\r\n            id\r\n        }\r\n    }\r\n`\r\n\r\nexport const PIN_CHAT = gql`\r\n    mutation pinChat($chatTitle: String!) {\r\n        pinChat(chatTitle: $chatTitle)  {\r\n            title\r\n        }\r\n    }\r\n`\r\n\r\nexport const UNPIN_CHAT = gql`\r\n    mutation unpinChat($chatTitle: String!) {\r\n        unpinChat(chatTitle: $chatTitle)  {\r\n            title\r\n        }\r\n    }\r\n`\r\n\r\nexport const REPORT_CHAT = gql`\r\n    mutation reportChat($chatTitle: String!) {\r\n        reportChat(chatTitle: $chatTitle)  {\r\n            title\r\n        }\r\n    }\r\n`\r\n\r\nexport const UNREPORT_CHAT = gql`\r\n    mutation unreportChat($chatTitle: String!) {\r\n        unreportChat(chatTitle: $chatTitle)  {\r\n            title\r\n        }\r\n    }\r\n`\r\n\r\nexport const ZEROREPORT_CHAT = gql`\r\n    mutation zeroReportChat($chatTitle: String!) {\r\n        zeroReportChat(chatTitle: $chatTitle)  {\r\n            title\r\n        }\r\n    }\r\n`","import { gql } from '@apollo/client'\r\n\r\nexport const CREATE_COMMENT = gql`\r\n    mutation createComment($chatTitle: String!, $content: String!, $imageUrl: String) {\r\n        createComment(chatTitle: $chatTitle, content: $content, imageUrl: $imageUrl)  {\r\n            content\r\n            date\r\n            imageUrl\r\n            hasVideo\r\n            reports\r\n            id\r\n            user{\r\n                username\r\n                imageUrl\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const REPORTED_COMMENTS = gql`\r\n    query {\r\n        reportedComments {\r\n            content\r\n            date\r\n            imageUrl\r\n            hasVideo\r\n            id\r\n            user{\r\n                username\r\n                imageUrl\r\n            }\r\n            reports\r\n        }\r\n    }\r\n`\r\n\r\nexport const COMMENT_ADDED = gql`\r\n    subscription {\r\n        commentAdded {\r\n            comment {\r\n                user { \r\n                    username\r\n                    imageUrl\r\n                }\r\n                date\r\n                content\r\n                imageUrl\r\n                hasVideo\r\n                reports\r\n                id\r\n            }\r\n            chatTitle\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_COMMENT = gql`\r\n    mutation deleteComment($commentId: String!) {\r\n        deleteComment(commentId: $commentId)  {\r\n            content\r\n            id\r\n        }\r\n    }\r\n`\r\n\r\nexport const COMMENT_DELETED = gql`\r\n    subscription {\r\n        commentDeleted {\r\n            content\r\n            imageUrl\r\n            reports\r\n            id\r\n        }\r\n    }\r\n`\r\n\r\nexport const EDIT_COMMENT = gql`\r\n    mutation editComment($commentId: String!, $content: String!, $imageUrl: String) {\r\n        editComment(\r\n            commentId: $commentId\r\n            content: $content\r\n            imageUrl: $imageUrl\r\n        ){\r\n            content\r\n            id\r\n        }\r\n    }\r\n`\r\n\r\nexport const COMMENT_EDITED = gql`\r\n    subscription {\r\n        commentEdited {\r\n            content\r\n            id\r\n            imageUrl\r\n            hasVideo\r\n            reports\r\n        }\r\n    }\r\n`\r\n\r\nexport const COMMENT_REPORTED = gql`\r\n    subscription {\r\n        commentReported {\r\n            content\r\n            id\r\n            imageUrl\r\n            hasVideo\r\n            reports\r\n        }\r\n    }\r\n`\r\n\r\nexport const REPORT_COMMENT = gql`\r\n    mutation reportComment($commentId: String!) {\r\n        reportComment(commentId: $commentId)  {\r\n            id\r\n        }\r\n    }\r\n`\r\n\r\nexport const UNREPORT_COMMENT = gql`\r\n    mutation unreportComment($commentId: String!) {\r\n        unreportComment(commentId: $commentId)  {\r\n            id\r\n        }\r\n    }\r\n`\r\n\r\nexport const ZEROREPORT_COMMENT = gql`\r\n    mutation zeroReportComment($commentId: String!) {\r\n        zeroReportComment(commentId: $commentId)  {\r\n            id\r\n        }\r\n    }\r\n`","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache, split } from '@apollo/client'\r\nimport { setContext } from 'apollo-link-context'\r\nimport { getMainDefinition } from '@apollo/client/utilities'\r\nimport { WebSocketLink } from '@apollo/link-ws'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport { setUser } from './reducers/userReducer'\r\nimport { setToken } from './reducers/tokenReducer'\r\nimport { setMode } from './reducers/modeReducer'\r\nconst authLink = setContext((_, { headers }) => {\r\n    const token = localStorage.getItem('user-token')\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `bearer ${token}` : null\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst defaultOptions = {\r\n    watchQuery: {\r\n        fetchPolicy: 'no-cache'\r\n    },\r\n    query: {\r\n        fetchPolicy: 'no-cache'\r\n    },\r\n    mutation: {\r\n        fetchPolicy: 'no-cache'\r\n    }\r\n}\r\n\r\nconst httpLink = new HttpLink({ uri: '/graphql' })\r\n\r\nlet wsLink\r\nif (window.location.host.includes('localhost')) {\r\n    wsLink = new WebSocketLink({\r\n        uri: `ws://${window.location.host}/graphql`,\r\n        options: { reconnect: true }\r\n    })\r\n} else {\r\n    wsLink = new WebSocketLink({\r\n        uri: `wss://${window.location.host}/graphql`,\r\n        options: { reconnect: true }\r\n    })\r\n}\r\nconst splitLink = split(({ query }) => {\r\n    const definition = getMainDefinition(query)\r\n    return (definition.kind === 'OperationDefinition' && definition.operation === 'subscription')\r\n}, wsLink, authLink.concat(httpLink))\r\n\r\nconst client = new ApolloClient({\r\n    cache: new InMemoryCache(),\r\n    link: splitLink,\r\n    defaultOptions: defaultOptions\r\n})\r\n\r\n\r\n\r\n\r\nconst loggedToken = localStorage.getItem('user-token')\r\nconst loggedUser = localStorage.getItem('logged-user')\r\nconst mode = localStorage.getItem('mode')\r\nif (loggedToken) {\r\n    store.dispatch(setToken(loggedToken))\r\n}\r\nif (loggedUser) {\r\n    store.dispatch(setUser(JSON.parse(loggedUser)))\r\n}\r\nif (mode) {\r\n    store.dispatch(setMode(mode))\r\n} else {\r\n    store.dispatch(setMode('light'))\r\n}\r\nReactDOM.render(<ApolloProvider client={client}><Provider store={store}><Router><App /></Router></Provider></ApolloProvider>, document.getElementById('root'))","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useMutation } from '@apollo/client'\r\nimport { DELETE_CHAT, REPORT_CHAT, UNREPORT_CHAT, ZEROREPORT_CHAT } from '../queries/chatqueries'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Chat = ({ chat, isPinned, submitPin, submitUnpin }) => {\r\n    const dispatch = useDispatch()\r\n    const currentUser = useSelector(state => state.user)\r\n    let latestComment = 'No comments yet.'\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' }\r\n    let date = new Date(chat.date).toLocaleTimeString([], options)\r\n    if (chat.latestComment) {\r\n        if (chat.latestComment.content.length > 30) {\r\n            latestComment = `${chat.latestComment.content.substring(0, 30)}... -${chat.latestComment.user.username}`\r\n        } else {\r\n            latestComment = `${chat.latestComment.content} -${chat.latestComment.user.username}`\r\n        }\r\n        date = new Date(chat.latestComment.date).toLocaleTimeString([], options)\r\n    }\r\n    const [deleteChat, result] = useMutation(DELETE_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitDelete = () => {\r\n        if (window.confirm('Delete chat?')) {\r\n            deleteChat({ variables: { chatId: chat.id } })\r\n        }\r\n    }\r\n    const [reportChat, reportResult] = useMutation(REPORT_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitReport = () => {\r\n        if (window.confirm('Report chat?')) {\r\n            reportChat({ variables: { chatTitle: chat.title } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (reportResult.data) {\r\n            dispatch(setNotification({ message: 'Chat reported', error: false }, 10))\r\n        }\r\n    }, [reportResult.data]) // eslint-disable-line\r\n    const [unreportChat, unreportResult] = useMutation(UNREPORT_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitUnreport = () => {\r\n        if (window.confirm('Unreport chat?')) {\r\n            unreportChat({ variables: { chatTitle: chat.title } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (unreportResult.data) {\r\n            dispatch(setNotification({ message: 'Chat unreported', error: false }, 10))\r\n        }\r\n    }, [unreportResult.data]) // eslint-disable-line\r\n    const [zeroReportChat, zeroReportResult] = useMutation(ZEROREPORT_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitZeroReport = () => {\r\n        if (window.confirm('Zero chat\\'s reports?')) {\r\n            zeroReportChat({ variables: { chatTitle: chat.title } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (zeroReportResult.loading && zeroReportResult.called) {\r\n            dispatch(setNotification({ message: 'Chat\\'s reports zeroed', error: false }, 10))\r\n        }\r\n    }, [zeroReportResult]) // eslint-disable-line\r\n    const styleBox = {\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        marginBottom: '10px'\r\n    }\r\n    return (\r\n        <div style={styleBox}>\r\n            <div>\r\n                <Link to={`/chats/${chat.title}`}>{chat.title}</Link>\r\n                {currentUser.admin ?\r\n                    <> Reports: {chat.reports.length}</>\r\n                    :\r\n                    <></>\r\n                }\r\n            </div>\r\n\r\n            <div>\r\n                {latestComment}\r\n            </div>\r\n            <div>\r\n                {date}&nbsp;\r\n                {isPinned ?\r\n                    <Button type='button' size='sm' onClick={() => submitUnpin(chat)}>Unpin</Button>\r\n                    :\r\n                    <Button type='button' size='sm' onClick={() => submitPin(chat)}>Pin</Button>\r\n                }\r\n                {currentUser.admin ?\r\n                    <>\r\n                        {chat.reports.length > 0 ?\r\n                            <Button type='button' size='sm' onClick={submitZeroReport}>Zero reports</Button>\r\n                            :\r\n                            <></>\r\n                        }\r\n                        <Button type='button' size='sm' onClick={submitDelete}>Delete</Button>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        {chat.reports.includes(currentUser.id) ?\r\n                            <Button type='button' size='sm' onClick={submitUnreport}>Unreport</Button>\r\n                            :\r\n                            <Button type='button' size='sm' onClick={submitReport}>Report</Button>\r\n                        }\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useMutation } from '@apollo/client'\r\nimport { CREATE_CHAT } from '../queries/chatqueries'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst ChatForm = () => {\r\n    const [title, setTitle] = useState('')\r\n    const dispatch = useDispatch()\r\n    const mode = useSelector(state => state.mode)\r\n    const history = useHistory()\r\n    const [create, result] = useMutation(CREATE_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submit = (event) => {\r\n        event.preventDefault()\r\n        create({ variables: { chatTitle: title } })\r\n        setTitle('')\r\n    }\r\n    useEffect(() => {\r\n        if (result.data) {\r\n            dispatch(setNotification({ message: 'New chat created', error: false }, 10))\r\n            history.push(`/chats/${result.data.createChat.title}`)\r\n        }\r\n    }, [result.data]) // eslint-disable-line\r\n    const style = { resize: 'none', borderColor: 'grey' }\r\n    if (mode === 'light') {\r\n        style.backgroundColor = 'white'\r\n    } else {\r\n        style.backgroundColor = 'darkgray'\r\n    }\r\n    return (\r\n        <>\r\n            <Form onSubmit={submit}>\r\n                <Row size=\"lg\">\r\n                    <Col md=\"10\" style={{ paddingRight: '0' }}>\r\n                        <Form.Control as=\"textarea\" rows=\"1\" style={style} id='content' value={title} name=\"content\" onChange={({ target }) => setTitle(target.value)} placeholder='Title...' required block='true' />\r\n                    </Col>\r\n                    <Col md=\"2\" style={{ paddingLeft: '0' }}>\r\n                        <Button style={{ height: '100%' }} id='submit' type=\"submit\" size=\"lg\" block='true'>Start new chat</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatForm","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useLazyQuery, useSubscription, useMutation } from '@apollo/client'\r\nimport { CHAT_ADDED, CHATS, PINNED_CHATS, CHAT_DELETED, UNPIN_CHAT, PIN_CHAT, CHAT_REPORTED } from '../queries/chatqueries'\r\nimport { COMMENT_ADDED } from '../queries/commentqueries'\r\nimport ChatListing from './ChatListing'\r\nimport ChatForm from './ChatForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst ChatsPage = () => {\r\n    const dispatch = useDispatch()\r\n    const mode = useSelector(state => state.mode)\r\n    const [chats, setChats] = useState([])\r\n    const [loadChats, chatsResult] = useLazyQuery(CHATS)\r\n    const [loadPinnedChats, pinnedChatsResult] = useLazyQuery(PINNED_CHATS)\r\n    const [chatsToShow, setChatsToShow] = useState([])\r\n    const [filter, setFilter] = useState('')\r\n    const [pinnedChats, setPinnedChats] = useState()\r\n    const sortChats = useCallback((chatA, chatB) => {\r\n        if (!pinnedChats) {\r\n            return 0\r\n        }\r\n        if (pinnedChats.includes(chatA.title) && !pinnedChats.includes(chatB.title)) {\r\n            return -1\r\n        }\r\n        if (!pinnedChats.includes(chatA.title) && pinnedChats.includes(chatB.title)) {\r\n            return 1\r\n        }\r\n        let dateA = chatA.date\r\n        if (chatA.latestComment) {\r\n            dateA = chatA.latestComment.date\r\n        }\r\n        let dateB = chatB.date\r\n        if (chatB.latestComment) {\r\n            dateB = chatB.latestComment.date\r\n        }\r\n        return dateB - dateA\r\n    }, [pinnedChats])\r\n    useEffect(() => {\r\n        loadChats()\r\n        loadPinnedChats()\r\n    }, []) //eslint-disable-line\r\n    useEffect(() => {\r\n        if (chatsResult.data) {\r\n            setChats(chatsResult.data.chats.slice(0).sort(sortChats))\r\n            setChatsToShow(chats)\r\n        }\r\n    }, [chatsResult.data]) //eslint-disable-line\r\n    useEffect(() => {\r\n        if (pinnedChatsResult.data) {\r\n            setPinnedChats(pinnedChatsResult.data.pinnedChats.map(chat => chat.title))\r\n        }\r\n    }, [pinnedChatsResult.data]) //eslint-disable-line\r\n    useSubscription(CHAT_ADDED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const newChat = subscriptionData.data.chatAdded\r\n            const newChats = chats.concat(newChat)\r\n            newChats.sort(sortChats)\r\n            setChats(newChats)\r\n        }\r\n    })\r\n    useSubscription(COMMENT_ADDED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const newComment = subscriptionData.data.commentAdded.comment\r\n            const chatTitle = subscriptionData.data.commentAdded.chatTitle\r\n            const newChats = chats.map(chat => chat.title === chatTitle ? { ...chat, latestComment: newComment } : chat)\r\n            newChats.sort(sortChats)\r\n            setChats(newChats)\r\n        }\r\n    })\r\n    useSubscription(CHAT_REPORTED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const reportedChat = subscriptionData.data.chatReported\r\n            const newChats = chats.map(chat => chat.title === reportedChat.title ? { ...chat, reports: reportedChat.reports } : chat)\r\n            newChats.sort(sortChats)\r\n            setChats(newChats)\r\n        }\r\n    })\r\n    useEffect(() => {\r\n        if (filter === '') {\r\n            setChatsToShow(chats.slice(0).sort(sortChats))\r\n        } else {\r\n            setChatsToShow(chats.filter(chat => chat.title.toLowerCase().startsWith(filter.toLowerCase())).sort(sortChats))\r\n        }\r\n    }, [filter, chats, sortChats])\r\n    const [pinChat, pinResult] = useMutation(PIN_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const [unpinChat, unpinResult] = useMutation(UNPIN_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitPin = (chat) => {\r\n        if (window.confirm('Pin chat?')) {\r\n            pinChat({ variables: { chatTitle: chat.title } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (pinResult.data) {\r\n            setPinnedChats(pinnedChats.concat(pinResult.data.pinChat.title))\r\n            dispatch(setNotification({ message: 'Chat pinned', error: false }, 10))\r\n        }\r\n    }, [pinResult.data]) // eslint-disable-line\r\n    const submitUnpin = (chat) => {\r\n        if (window.confirm('Unpin chat?')) {\r\n            unpinChat({ variables: { chatTitle: chat.title } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (unpinResult.data) {\r\n            setPinnedChats(pinnedChats.filter(pchat => pchat !== unpinResult.data.unpinChat.title))\r\n            dispatch(setNotification({ message: 'Chat unpinned', error: false }, 10))\r\n        }\r\n    }, [unpinResult.data]) // eslint-disable-line\r\n    useSubscription(CHAT_DELETED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const deletedChat = subscriptionData.data.chatDeleted\r\n            setChats(chats.filter(chat => chat.id !== deletedChat.id))\r\n        }\r\n    })\r\n    const styleBox = {\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        borderColor: 'grey',\r\n        padding: '10px',\r\n        marginBottom: '0',\r\n        overflowY: 'scroll',\r\n        height: '77.5vh'\r\n    }\r\n    const filterStyle = { float: 'right', width: '30%', paddingBottom: '0', borderColor: 'grey' }\r\n    if (mode === 'light') {\r\n        filterStyle.backgroundColor = 'white'\r\n    } else {\r\n        filterStyle.backgroundColor = 'darkgray'\r\n    }\r\n    return (\r\n        <div style={{ height: '100%' }}>\r\n            <h2 style={{ display: 'inline-block', marginBottom: '0' }}>Chats</h2>\r\n            <input style={filterStyle} type='text' value={filter} onChange={({ target }) => setFilter(target.value)} placeholder='Filter chats by title...'></input>\r\n            <div style={styleBox}>\r\n                {pinnedChats ?\r\n                    <>\r\n                        {chatsToShow.map(chat =>\r\n                            <ChatListing key={chat.id} chat={chat} submitPin={submitPin} submitUnpin={submitUnpin} isPinned={pinnedChats.includes(chat.title)}></ChatListing>\r\n                        )}\r\n                    </>\r\n                    :\r\n                    <div>Loading</div>\r\n                }\r\n\r\n            </div>\r\n            <ChatForm></ChatForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatsPage","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useLazyQuery, useSubscription, useMutation } from '@apollo/client'\r\nimport { CHAT_ADDED, REPORTED_CHATS, PINNED_CHATS, CHAT_DELETED, UNPIN_CHAT, PIN_CHAT, CHAT_REPORTED } from '../queries/chatqueries'\r\nimport { COMMENT_ADDED } from '../queries/commentqueries'\r\nimport ChatListing from './ChatListing'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst ReportedChatsPage = () => {\r\n    const dispatch = useDispatch()\r\n    const mode = useSelector(state => state.mode)\r\n    const currentUser = useSelector(state => state.user)\r\n    const history = useHistory()\r\n    const [chats, setChats] = useState([])\r\n    const [loadReportedChats, reportedChatsResult] = useLazyQuery(REPORTED_CHATS)\r\n    const [loadPinnedChats, pinnedChatsResult] = useLazyQuery(PINNED_CHATS)\r\n    const [chatsToShow, setChatsToShow] = useState([])\r\n    const [filter, setFilter] = useState('')\r\n    const [pinnedChats, setPinnedChats] = useState()\r\n    const sortChats = useCallback((chatA, chatB) => {\r\n        if (!pinnedChats) {\r\n            return 0\r\n        }\r\n        if (pinnedChats.includes(chatA.title) && !pinnedChats.includes(chatB.title)) {\r\n            return -1\r\n        }\r\n        if (!pinnedChats.includes(chatA.title) && pinnedChats.includes(chatB.title)) {\r\n            return 1\r\n        }\r\n        if (chatA.reports.length !== chatB.reports.length) {\r\n            return chatB.reports.length - chatA.reports.length\r\n        }\r\n        let dateA = chatA.date\r\n        if (chatA.latestComment) {\r\n            dateA = chatA.latestComment.date\r\n        }\r\n        let dateB = chatB.date\r\n        if (chatB.latestComment) {\r\n            dateB = chatB.latestComment.date\r\n        }\r\n        return dateB - dateA\r\n    }, [pinnedChats])\r\n    useEffect(() => {\r\n        if (!currentUser.admin) {\r\n            history.push('/error/Not authorized')\r\n        }\r\n        loadReportedChats()\r\n        loadPinnedChats()\r\n    }, []) //eslint-disable-line\r\n    useEffect(() => {\r\n        if (reportedChatsResult.data) {\r\n            setChats(reportedChatsResult.data.reportedChats.slice(0).sort(sortChats))\r\n            setChatsToShow(chats)\r\n        }\r\n    }, [reportedChatsResult.data]) //eslint-disable-line\r\n    useEffect(() => {\r\n        if (pinnedChatsResult.data) {\r\n            setPinnedChats(pinnedChatsResult.data.pinnedChats.map(chat => chat.title))\r\n        }\r\n    }, [pinnedChatsResult.data]) //eslint-disable-line\r\n    useSubscription(CHAT_ADDED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const newChat = subscriptionData.data.chatAdded\r\n            const newChats = chats.concat(newChat)\r\n            newChats.sort(sortChats)\r\n            setChats(newChats)\r\n        }\r\n    })\r\n    useSubscription(COMMENT_ADDED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const newComment = subscriptionData.data.commentAdded.comment\r\n            const chatTitle = subscriptionData.data.commentAdded.chatTitle\r\n            const newChats = chats.map(chat => chat.title === chatTitle ? { ...chat, latestComment: newComment } : chat)\r\n            newChats.sort(sortChats)\r\n            setChats(newChats)\r\n        }\r\n    })\r\n    useSubscription(CHAT_REPORTED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const reportedChat = subscriptionData.data.chatReported\r\n            let newChats = []\r\n            if (chats.map(chat => chat.title).includes(reportedChat.title)) {\r\n                newChats = chats.map(chat => chat.title === reportedChat.title ? { ...chat, reports: reportedChat.reports } : chat)\r\n            } else {\r\n                newChats = chats.concat(reportedChat)\r\n            }\r\n            newChats.sort(sortChats)\r\n            setChats(newChats.filter(chat => chat.reports.length > 0))\r\n        }\r\n    })\r\n    useEffect(() => {\r\n        if (filter === '') {\r\n            setChatsToShow(chats.slice(0).sort(sortChats))\r\n        } else {\r\n            setChatsToShow(chats.filter(chat => chat.title.toLowerCase().startsWith(filter.toLowerCase())).sort(sortChats))\r\n        }\r\n    }, [filter, chats, sortChats])\r\n    const [pinChat, pinResult] = useMutation(PIN_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const [unpinChat, unpinResult] = useMutation(UNPIN_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitPin = (chat) => {\r\n        if (window.confirm('Pin chat?')) {\r\n            pinChat({ variables: { chatTitle: chat.title } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (pinResult.data) {\r\n            setPinnedChats(pinnedChats.concat(pinResult.data.pinChat.title))\r\n            dispatch(setNotification({ message: 'Chat pinned', error: false }, 10))\r\n        }\r\n    }, [pinResult.data]) // eslint-disable-line\r\n    const submitUnpin = (chat) => {\r\n        if (window.confirm('Unpin chat?')) {\r\n            unpinChat({ variables: { chatTitle: chat.title } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (unpinResult.data) {\r\n            setPinnedChats(pinnedChats.filter(pchat => pchat !== unpinResult.data.unpinChat.title))\r\n            dispatch(setNotification({ message: 'Chat unpinned', error: false }, 10))\r\n        }\r\n    }, [unpinResult.data]) // eslint-disable-line\r\n    useSubscription(CHAT_DELETED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const deletedChat = subscriptionData.data.chatDeleted\r\n            setChats(chats.filter(chat => chat.id !== deletedChat.id))\r\n        }\r\n    })\r\n    const styleBox = {\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        borderColor: 'grey',\r\n        padding: '10px',\r\n        marginBottom: '0',\r\n        overflowY: 'scroll',\r\n        height: '77.5vh'\r\n    }\r\n    const filterStyle = { float: 'right', width: '30%', paddingBottom: '0', borderColor: 'grey' }\r\n    if (mode === 'light') {\r\n        filterStyle.backgroundColor = 'white'\r\n    } else {\r\n        filterStyle.backgroundColor = 'darkgray'\r\n    }\r\n    return (\r\n        <div style={{ height: '100%' }}>\r\n            <h2 style={{ display: 'inline-block', marginBottom: '0' }}>Reported chats</h2>\r\n            <input style={filterStyle} type='text' value={filter} onChange={({ target }) => setFilter(target.value)} placeholder='Filter chats by title...'></input>\r\n            <div style={styleBox}>\r\n                {pinnedChats ?\r\n                    <>\r\n                        {chatsToShow.map(chat =>\r\n                            <ChatListing key={chat.id} chat={chat} submitPin={submitPin} submitUnpin={submitUnpin} isPinned={pinnedChats.includes(chat.title)}></ChatListing>\r\n                        )}\r\n                    </>\r\n                    :\r\n                    <div>Loading</div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReportedChatsPage","import React, { useEffect, useState } from 'react'\r\nimport { useMutation } from '@apollo/client'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { Button, Image } from 'react-bootstrap'\r\nimport { DELETE_COMMENT, EDIT_COMMENT, REPORT_COMMENT, UNREPORT_COMMENT, ZEROREPORT_COMMENT } from '../queries/commentqueries'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Comment = ({ comment }) => {\r\n    const dispatch = useDispatch()\r\n    const currentUser = useSelector(state => state.user)\r\n    const mode = useSelector(state => state.mode)\r\n    const [content, setContent] = useState(comment.content)\r\n    const [editing, setEditing] = useState(false)\r\n    const [imageUrl, setImageUrl] = useState(comment.imageUrl)\r\n    useEffect(() => {\r\n        if (!comment.imageUrl) {\r\n            setImageUrl('')\r\n        }\r\n    }, []) // eslint-disable-line\r\n    const [deleteComment, deleteResult] = useMutation(DELETE_COMMENT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const [editComment, editResult] = useMutation(EDIT_COMMENT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitDelete = () => {\r\n        if (window.confirm('Delete comment?')) {\r\n            deleteComment({ variables: { commentId: comment.id } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (deleteResult.called && deleteResult.loading) {\r\n            dispatch(setNotification({ message: 'Comment deleted', error: false }, 10))\r\n        }\r\n    }, [deleteResult]) // eslint-disable-line\r\n    let image = <></>\r\n    if (comment.imageUrl && comment.imageUrl !== '') {\r\n        if (comment.hasVideo) {\r\n            image = <><iframe width=\"420\" height=\"315\"\r\n                frameBorder='0'\r\n                allowFullScreen\r\n                title='video'\r\n                src={comment.imageUrl}>\r\n            </iframe><br /></>\r\n        } else {\r\n            image = <><Image src={comment.imageUrl} fluid></Image><br /></>\r\n        }\r\n    }\r\n    let profileImage = <></>\r\n    if (comment.user.imageUrl) {\r\n        profileImage = <><Image style={{ height: '10%', width: '10%' }} src={comment.user.imageUrl} fluid></Image></>\r\n    }\r\n    const submitEdit = () => {\r\n        if (window.confirm('Edit comment?')) {\r\n            editComment({ variables: { commentId: comment.id, content: content, imageUrl: imageUrl } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (editResult.data) {\r\n            setEditing(false)\r\n            dispatch(setNotification({ message: 'Comment edited', error: false }, 10))\r\n        }\r\n    }, [editResult.data]) // eslint-disable-line\r\n    const stopEditing = () => {\r\n        setEditing(false)\r\n        setImageUrl(comment.imageUrl)\r\n        setContent(comment.content)\r\n    }\r\n    const startEditing = () => {\r\n        setEditing(true)\r\n        if (comment.content.endsWith(' -edited')) {\r\n            setContent(comment.content.substring(0, comment.content.length - 8))\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setContent(comment.content)\r\n    }, [comment])\r\n    const [reportComment, reportResult] = useMutation(REPORT_COMMENT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitReport = () => {\r\n        if (window.confirm('Report comment?')) {\r\n            reportComment({ variables: { commentId: comment.id } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (reportResult.data) {\r\n            dispatch(setNotification({ message: 'Comment reported', error: false }, 10))\r\n        }\r\n    }, [reportResult.data]) // eslint-disable-line\r\n    const [unreportComment, unreportResult] = useMutation(UNREPORT_COMMENT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitUnreport = () => {\r\n        if (window.confirm('Unreport comment?')) {\r\n            unreportComment({ variables: { commentId: comment.id } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (unreportResult.data) {\r\n            dispatch(setNotification({ message: 'Comment unreported', error: false }, 10))\r\n        }\r\n    }, [unreportResult.data]) // eslint-disable-line\r\n    const [zeroReportComment, zeroReportResult] = useMutation(ZEROREPORT_COMMENT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitZeroReport = () => {\r\n        if (window.confirm('Zero comment\\'s reports?')) {\r\n            zeroReportComment({ variables: { commentId: comment.id } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (zeroReportResult.called && zeroReportResult.loading) {\r\n            dispatch(setNotification({ message: 'Comment\\'s reports zeroed', error: false }, 10))\r\n        }\r\n    }, [zeroReportResult]) // eslint-disable-line\r\n    const styleBox = {\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        marginBottom: '10px'\r\n    }\r\n    const contentBoxStyle = {\r\n        width: '100%',\r\n        resize: 'none',\r\n        border: 'none'\r\n    }\r\n    const urlStyle = { borderColor: 'grey', width: '100%' }\r\n    if (mode === 'light') {\r\n        contentBoxStyle.backgroundColor = 'white'\r\n        urlStyle.backgroundColor = 'white'\r\n    } else {\r\n        contentBoxStyle.backgroundColor = 'darkgray'\r\n        urlStyle.backgroundColor = 'darkgray'\r\n    }\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' }\r\n    const date = new Date(comment.date).toLocaleTimeString([], options)\r\n    return (\r\n        <div style={styleBox}>\r\n            <div>\r\n                {profileImage} <Link to={`/users/${comment.user.username}`}>{comment.user.username}</Link> {date}\r\n                {currentUser.admin ?\r\n                    <> Reports: {comment.reports.length}</>\r\n                    :\r\n                    <></>\r\n                }\r\n            </div>\r\n            <textarea rows='2' value={content} readOnly={!editing} style={contentBoxStyle} onChange={({ target }) => setContent(target.value)} block='true' />\r\n            {image}\r\n            {editing ?\r\n                <>\r\n                    <input type='text' style={urlStyle} placeholder=\"Image/video url...\" value={imageUrl} onChange={({ target }) => setImageUrl(target.value)} block='true'></input><br />\r\n                </>\r\n                :\r\n                <></>\r\n            }\r\n            {(currentUser.username !== comment.user.username) && !currentUser.admin && (comment.content !== 'Comment deleted') ?\r\n                <>\r\n                    {comment.reports.includes(currentUser.id) ?\r\n                        <Button type='button' size='sm' onClick={submitUnreport}>Unreport</Button>\r\n                        :\r\n                        <Button type='button' size='sm' onClick={submitReport}>Report</Button>\r\n                    }\r\n                </>\r\n                :\r\n                <></>\r\n            }\r\n            {currentUser.admin ?\r\n                <>\r\n                    {comment.reports.length > 0 ?\r\n                        <Button type='button' size='sm' onClick={submitZeroReport}>Zero reports</Button>\r\n                        :\r\n                        <></>\r\n                    }\r\n                </>\r\n                :\r\n                <></>\r\n            }\r\n            {(currentUser.username === comment.user.username || currentUser.admin) && (comment.content !== 'Comment deleted') ?\r\n                <>\r\n                    <Button type='button' size='sm' onClick={submitDelete}>Delete comment</Button>\r\n                    {editing ?\r\n                        <>\r\n                            <Button type='button' size='sm' onClick={stopEditing}>Stop editing</Button>\r\n                            <Button type='button' size='sm' onClick={submitEdit}>Submit edit</Button>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            {(currentUser.username === comment.user.username) ?\r\n                                <Button type='button' size='sm' onClick={startEditing}>Start editing</Button>\r\n                                :\r\n                                <></>\r\n                            }\r\n                        </>\r\n                    }\r\n                </>\r\n                :\r\n                <></>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useLazyQuery, useSubscription } from '@apollo/client'\r\nimport { COMMENT_DELETED, COMMENT_EDITED, COMMENT_REPORTED, REPORTED_COMMENTS } from '../queries/commentqueries'\r\nimport Comment from './Comment'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ReportedCommentsPage = () => {\r\n    const [comments, setComments] = useState([])\r\n    const history = useHistory()\r\n    const mode = useSelector(state => state.mode)\r\n    const currentUser = useSelector(state => state.user)\r\n    const [commentsToShow, setCommentsToShow] = useState([])\r\n    const [filter, setFilter] = useState('')\r\n    const [loadComments, commentsResult] = useLazyQuery(REPORTED_COMMENTS)\r\n    const commentsEndRef = useRef(null)\r\n    const sortComments = (commentA, commentB) => {\r\n        if (commentA.reports.length !== commentB.reports.length) {\r\n            return commentB.reports.length - commentA.reports.length\r\n        }\r\n        return commentA.date - commentB.date\r\n    }\r\n    const scrollToBottom = () => {\r\n        commentsEndRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n    useEffect(() => {\r\n        if (!currentUser.admin) {\r\n            history.push('/error/Not authorized')\r\n        }\r\n        loadComments()\r\n    }, []) //eslint-disable-line\r\n    useEffect(() => {\r\n        if (commentsResult.data) {\r\n            setComments(commentsResult.data.reportedComments.sort(sortComments))\r\n        }\r\n    }, [commentsResult]) //eslint-disable-line\r\n    useEffect(scrollToBottom, [comments, commentsToShow])\r\n    useSubscription(COMMENT_DELETED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const deletedComment = subscriptionData.data.commentDeleted\r\n            setComments(comments.filter(comment => comment.id !== deletedComment.id))\r\n        }\r\n    })\r\n    useSubscription(COMMENT_EDITED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const editedComment = subscriptionData.data.commentEdited\r\n            setComments(comments.map(comment => comment.id === editedComment.id ? { ...comment, content: editedComment.content, imageUrl: editedComment.imageUrl, hasVideo: editedComment.hasVideo } : comment))\r\n        }\r\n    })\r\n    useEffect(() => {\r\n        if (filter === '') {\r\n            setCommentsToShow(comments)\r\n        } else {\r\n            setCommentsToShow(comments.filter(comment => comment.content.toLowerCase().includes(filter.toLowerCase())))\r\n        }\r\n    }, [filter, comments])\r\n    useSubscription(COMMENT_REPORTED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const reportedComment = subscriptionData.data.commentReported\r\n            let newComments = []\r\n            if (comments.map(comment => comment.id).includes(reportedComment.id)) {\r\n                newComments = comments.map(comment => comment.id === reportedComment.id ? { ...comment, reports: reportedComment.reports } : comment)\r\n            } else {\r\n                newComments = comments.concat(reportedComment)\r\n            }\r\n            newComments.sort(sortComments)\r\n            setComments(newComments.filter(comment => comment.reports.length > 0))\r\n        }\r\n    })\r\n    const styleBox = {\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        borderColor: 'grey',\r\n        padding: '10px',\r\n        marginBottom: '0',\r\n        overflowY: 'scroll',\r\n        height: '70vh',\r\n        width: '100%'\r\n    }\r\n    const filterStyle = { float: 'right', width: '30%', paddingBottom: '0', borderColor: 'grey' }\r\n    if (mode === 'light') {\r\n        filterStyle.backgroundColor = 'white'\r\n    } else {\r\n        filterStyle.backgroundColor = 'darkgray'\r\n    }\r\n    return (\r\n        <>\r\n            <h2 style={{ display: 'inline-block', marginBottom: '0' }}>Reported comments</h2>\r\n            <input style={filterStyle} type='text' value={filter} onChange={({ target }) => setFilter(target.value)} placeholder='Filter comments by content...'></input>\r\n            <br />\r\n            <div style={styleBox}>\r\n                {comments.length === 0 ?\r\n                    <div>No reported comments</div>\r\n                    :\r\n                    commentsToShow.map(comment =>\r\n                        <Comment key={comment.id} comment={comment}></Comment>\r\n                    )\r\n                }\r\n                <div ref={commentsEndRef} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportedCommentsPage","import React, { useState } from 'react'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useMutation } from '@apollo/client'\r\nimport { CREATE_COMMENT } from '../queries/commentqueries'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst CommentForm = ({ title }) => {\r\n    const [content, setContent] = useState('')\r\n    const [imageUrl, setImageUrl] = useState('')\r\n    const dispatch = useDispatch()\r\n    const mode = useSelector(state => state.mode)\r\n    const [send, result] = useMutation(CREATE_COMMENT, { // eslint-disable-line\r\n        onCompleted: () => {\r\n            setContent('')\r\n            setImageUrl('')\r\n        },\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submit = (event) => {\r\n        event.preventDefault()\r\n        send({ variables: { chatTitle: title, content, imageUrl } })\r\n    }\r\n    const contentStyle = { resize: 'none', borderColor: 'grey' }\r\n    const urlStyle = { borderColor: 'grey' }\r\n    if (mode === 'light') {\r\n        contentStyle.backgroundColor = 'white'\r\n        urlStyle.backgroundColor = 'white'\r\n    } else {\r\n        contentStyle.backgroundColor = 'darkgray'\r\n        urlStyle.backgroundColor = 'darkgray'\r\n    }\r\n    return (\r\n        <div>\r\n            <Form onSubmit={submit}>\r\n                <Row size='lg'>\r\n                    <Col md='10' style={{ paddingRight: '0' }}>\r\n                        <Form.Control as='textarea' rows='2' style={contentStyle} id='content' value={content} name='content' onChange={({ target }) => setContent(target.value)} placeholder='New comment...' required block='true' />\r\n                        <Form.Control style={urlStyle} size=\"sm\" type=\"text\" placeholder=\"Image/video url...\" value={imageUrl} name='imageUrl' id='imageUrl' onChange={({ target }) => setImageUrl(target.value)} block='true'></Form.Control>\r\n                    </Col>\r\n                    <Col md='2' style={{ paddingLeft: '0' }}>\r\n                        <Button style={{ height: '100%' }} id='submit' type='submit' size='lg' block>Send</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentForm","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useLazyQuery, useSubscription, useMutation } from '@apollo/client'\r\nimport { COMMENT_ADDED, COMMENT_DELETED, COMMENT_EDITED, COMMENT_REPORTED } from '../queries/commentqueries'\r\nimport { CHAT, CHAT_REPORTED, REPORT_CHAT, UNREPORT_CHAT, ZEROREPORT_CHAT, PINNED_CHATS, PIN_CHAT, UNPIN_CHAT } from '../queries/chatqueries'\r\nimport Comment from './Comment'\r\nimport CommentForm from './CommentForm'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Button } from 'react-bootstrap'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst Chat = ({ title }) => {\r\n    const [chat, setChat] = useState(null)\r\n    const [comments, setComments] = useState([])\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const mode = useSelector(state => state.mode)\r\n    const currentUser = useSelector(state => state.user)\r\n    const [commentsToShow, setCommentsToShow] = useState([])\r\n    const [filter, setFilter] = useState('')\r\n    const [loadChat, chatResult] = useLazyQuery(CHAT)\r\n    const [loadPinnedChats, pinnedChatsResult] = useLazyQuery(PINNED_CHATS)\r\n    const [pinnedChats, setPinnedChats] = useState()\r\n    const commentsEndRef = useRef(null)\r\n    const scrollToBottom = () => {\r\n        commentsEndRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n    useEffect(() => {\r\n        loadChat({ variables: { chatTitle: title } })\r\n        loadPinnedChats()\r\n    }, []) //eslint-disable-line\r\n    useEffect(() => {\r\n        loadChat({ variables: { chatTitle: title } })\r\n        loadPinnedChats()\r\n    }, [title]) //eslint-disable-line\r\n    useEffect(() => {\r\n        if (chatResult.data) {\r\n            setComments(chatResult.data.chat.comments.sort((commentA, commentB) => {\r\n                return commentA.date - commentB.date\r\n            }))\r\n            setChat(chatResult.data.chat)\r\n        } else if (chatResult.called && !chatResult.loading) {\r\n            history.push('/error/Chat does not exist')\r\n        }\r\n    }, [chatResult]) //eslint-disable-line\r\n    useEffect(() => {\r\n        if (pinnedChatsResult.data) {\r\n            setPinnedChats(pinnedChatsResult.data.pinnedChats.map(chat => chat.title))\r\n        }\r\n    }, [pinnedChatsResult.data]) //eslint-disable-line\r\n    useEffect(scrollToBottom, [comments, commentsToShow])\r\n    useSubscription(COMMENT_ADDED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const newComment = subscriptionData.data.commentAdded.comment\r\n            const chatTitle = subscriptionData.data.commentAdded.chatTitle\r\n            if (chatTitle === title) {\r\n                const newComments = comments.concat(newComment)\r\n                newComments.sort((commentA, commentB) => {\r\n                    return commentA.date - commentB.date\r\n                })\r\n                setComments(newComments)\r\n            }\r\n        }\r\n    })\r\n    useSubscription(COMMENT_DELETED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const deletedComment = subscriptionData.data.commentDeleted\r\n            setComments(comments.map(comment => comment.id === deletedComment.id ? { ...comment, content: deletedComment.content, imageUrl: deletedComment.imageUrl, reports: deletedComment.reports } : comment))\r\n        }\r\n    })\r\n    useSubscription(COMMENT_EDITED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const editedComment = subscriptionData.data.commentEdited\r\n            setComments(comments.map(comment => comment.id === editedComment.id ? { ...comment, content: editedComment.content, imageUrl: editedComment.imageUrl, hasVideo: editedComment.hasVideo } : comment))\r\n        }\r\n    })\r\n    useEffect(() => {\r\n        if (filter === '') {\r\n            setCommentsToShow(comments)\r\n        } else {\r\n            setCommentsToShow(comments.filter(comment => comment.content.toLowerCase().includes(filter.toLowerCase())))\r\n        }\r\n    }, [filter, comments])\r\n    const [reportChat, reportResult] = useMutation(REPORT_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitReport = () => {\r\n        if (window.confirm('Report chat?')) {\r\n            reportChat({ variables: { chatTitle: title } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (reportResult.data) {\r\n            dispatch(setNotification({ message: 'Chat reported', error: false }, 10))\r\n        }\r\n    }, [reportResult.data]) // eslint-disable-line\r\n    const [unreportChat, unreportResult] = useMutation(UNREPORT_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitUnreport = () => {\r\n        if (window.confirm('Unreport chat?')) {\r\n            unreportChat({ variables: { chatTitle: title } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (unreportResult.data) {\r\n            dispatch(setNotification({ message: 'Chat unreported', error: false }, 10))\r\n        }\r\n    }, [unreportResult.data]) // eslint-disable-line\r\n    const [zeroReportChat, zeroReportResult] = useMutation(ZEROREPORT_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitZeroReport = () => {\r\n        if (window.confirm('Zero chat\\'s reports?')) {\r\n            zeroReportChat({ variables: { chatTitle: title } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (zeroReportResult.data) {\r\n            dispatch(setNotification({ message: 'Chat\\'s reports zeroed', error: false }, 10))\r\n        }\r\n    }, [zeroReportResult.data]) // eslint-disable-line\r\n    useSubscription(CHAT_REPORTED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const reportedChat = subscriptionData.data.chatReported\r\n            if (reportedChat.title === title) {\r\n                setChat(reportedChat)\r\n            }\r\n        }\r\n    })\r\n    const [pinChat, pinResult] = useMutation(PIN_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const [unpinChat, unpinResult] = useMutation(UNPIN_CHAT, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitPin = () => {\r\n        if (window.confirm('Pin chat?')) {\r\n            pinChat({ variables: { chatTitle: title } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (pinResult.data) {\r\n            setPinnedChats(pinnedChats.concat(pinResult.data.pinChat.title))\r\n            dispatch(setNotification({ message: 'Chat pinned', error: false }, 10))\r\n        }\r\n    }, [pinResult.data]) // eslint-disable-line\r\n    const submitUnpin = () => {\r\n        if (window.confirm('Unpin chat?')) {\r\n            unpinChat({ variables: { chatTitle: title } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (unpinResult.data) {\r\n            setPinnedChats(pinnedChats.filter(pchat => pchat !== unpinResult.data.unpinChat.title))\r\n            dispatch(setNotification({ message: 'Chat unpinned', error: false }, 10))\r\n        }\r\n    }, [unpinResult.data]) // eslint-disable-line\r\n    useSubscription(COMMENT_REPORTED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            const reportedComment = subscriptionData.data.commentReported\r\n            const newComments = comments.map(comment => comment.id === reportedComment.id ? { ...comment, reports: reportedComment.reports } : comment)\r\n            setComments(newComments)\r\n        }\r\n    })\r\n    const styleBox = {\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        borderColor: 'grey',\r\n        padding: '10px',\r\n        marginBottom: '0',\r\n        overflowY: 'scroll',\r\n        height: '70vh',\r\n        width: '100%'\r\n    }\r\n    const filterStyle = { float: 'right', width: '30%', paddingBottom: '0', borderColor: 'grey' }\r\n    if (mode === 'light') {\r\n        filterStyle.backgroundColor = 'white'\r\n    } else {\r\n        filterStyle.backgroundColor = 'darkgray'\r\n    }\r\n    return (\r\n        <>\r\n            {title.startsWith('userChat') ?\r\n                <h2 style={{ display: 'inline-block', marginBottom: '0' }}>{`${title.substring(8)}'s chat`}</h2>\r\n                :\r\n                <h2 style={{ display: 'inline-block', marginBottom: '0' }}>\r\n                    {title}&nbsp;\r\n                    {pinnedChats && pinnedChats.includes(title) ?\r\n                        <Button type='button' size='sm' onClick={submitUnpin}>Unpin</Button>\r\n                        :\r\n                        <Button type='button' size='sm' onClick={submitPin}>Pin</Button>\r\n                    }\r\n                    {currentUser.admin ?\r\n                        <>\r\n                            {chat && chat.reports.length > 0 ?\r\n                                <>\r\n                                    <Button type='button' size='sm' onClick={submitZeroReport}>Zero reports</Button> <span style={{ fontSize: '1rem' }}> Reports: {chat.reports.length}</span>\r\n                                </>\r\n                                :\r\n                                <></>\r\n                            }\r\n                        </>\r\n                        :\r\n                        <>\r\n                            {chat && chat.reports && chat.reports.includes(currentUser.id) ?\r\n                                <Button type='button' size='sm' onClick={submitUnreport}>Unreport</Button>\r\n                                :\r\n                                <Button type='button' size='sm' onClick={submitReport}>Report</Button>\r\n                            }\r\n                        </>\r\n                    }\r\n                </h2>\r\n            }\r\n            <input style={filterStyle} type='text' value={filter} onChange={({ target }) => setFilter(target.value)} placeholder='Filter comments by content...'></input>\r\n            <br />\r\n            <div style={styleBox}>\r\n                {comments.length === 0 ?\r\n                    <div>No comments yet</div>\r\n                    :\r\n                    commentsToShow.map(comment =>\r\n                        <Comment key={comment.id} comment={comment}></Comment>\r\n                    )\r\n                }\r\n                <div ref={commentsEndRef} />\r\n            </div>\r\n            <CommentForm title={title}></CommentForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Chat","import React from 'react'\r\nimport Chat from './Chat'\r\nimport { useRouteMatch } from 'react-router-dom'\r\n\r\nconst ChatPage = () => {\r\n    const match = useRouteMatch('/chats/:title')\r\n    const title = match ? match.params.title : null\r\n    return (\r\n        <div>\r\n            <Chat title={title}></Chat>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage","import React, { useEffect, useState } from 'react'\r\nimport { useRouteMatch } from 'react-router-dom'\r\nimport { useLazyQuery } from '@apollo/client'\r\nimport { USER } from '../queries/userqueries'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button, Image } from 'react-bootstrap'\r\nimport { SET_PROFILEPIC, DELETE_PROFILEPIC } from '../queries/userqueries'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMutation } from '@apollo/client'\r\nimport Chat from './Chat'\r\n\r\nconst ProfilePage = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const currentUser = useSelector(state => state.user)\r\n    const match = useRouteMatch('/users/:username')\r\n    const [user, setUser] = useState(null)\r\n    const [imageUrl, setImageUrl] = useState('')\r\n    const [editImageUrl, setEditImageUrl] = useState(false)\r\n    const username = match ? match.params.username : null\r\n    const [loadUser, userResult] = useLazyQuery(USER)\r\n    const [image, setImage] = useState(<></>)\r\n    useEffect(() => {\r\n        loadUser({ variables: { username } })\r\n    }, [username]) //eslint-disable-line\r\n    useEffect(() => {\r\n        if (userResult.data) {\r\n            setUser(userResult.data.user)\r\n        } else if (userResult.called && !userResult.loading) {\r\n            history.push('/error/User does not exist')\r\n        }\r\n    }, [userResult]) //eslint-disable-line\r\n    const [setProfilePic, profilePicResult] = useMutation(SET_PROFILEPIC, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitSetImage = () => {\r\n        if (window.confirm('Set profile picture?')) {\r\n            setProfilePic({ variables: { imageUrl } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (profilePicResult.data) {\r\n            dispatch(setNotification({ message: 'Profile picture set', error: false }, 10))\r\n            setUser({ ...user, imageUrl: profilePicResult.data.setUserProfilePic.imageUrl })\r\n            setImageUrl('')\r\n            setEditImageUrl(false)\r\n            setImage(<><Image style={{ height: '10%', width: '10%' }} src={profilePicResult.data.setUserProfilePic.imageUrl} fluid></Image><br /></>)\r\n        }\r\n    }, [profilePicResult.data]) // eslint-disable-line\r\n    const [deleteProfilePic, deleteProfilePicResult] = useMutation(DELETE_PROFILEPIC, { // eslint-disable-line\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    const submitDeleteImage = () => {\r\n        if (window.confirm('Delete profile picture?')) {\r\n            deleteProfilePic()\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (deleteProfilePicResult.data) {\r\n            dispatch(setNotification({ message: 'Profile picture deleted', error: false }, 10))\r\n            setUser({ ...user, imageUrl: null })\r\n            setImageUrl('')\r\n            setEditImageUrl(false)\r\n            setImage(<></>)\r\n        }\r\n    }, [deleteProfilePicResult.data]) // eslint-disable-line\r\n    const stopEditing = () => {\r\n        setEditImageUrl(false)\r\n        setImageUrl('')\r\n    }\r\n    useEffect(() => {\r\n        if (user && user.imageUrl) {\r\n            setImage(<><Image style={{ height: '100%', width: '100%' }} src={user.imageUrl} fluid></Image><br /></>)\r\n        }\r\n    }, [user])\r\n    return (\r\n        <>\r\n            {user ?\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <div className=\"row\" >\r\n                            <div>{image}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <h2>{user.username}</h2>\r\n                        </div>\r\n                        <div className=\"row\" >\r\n                            {user.username === currentUser.username ?\r\n                                <>\r\n                                    {editImageUrl ?\r\n                                        <>\r\n                                            <div className=\"row\">\r\n                                                <input type='text' placeholder='Url of the image...' value={imageUrl} onChange={({ target }) => setImageUrl(target.value)}></input>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <Button type='button' size='sm' onClick={stopEditing}>Back</Button>\r\n                                                {user.imageUrl ?\r\n                                                    <Button type='button' size='sm' onClick={submitDeleteImage}>Delete image</Button>\r\n                                                    :\r\n                                                    <></>\r\n                                                }\r\n                                                <Button type='button' size='sm' onClick={submitSetImage}>Submit image</Button>\r\n                                            </div>\r\n                                        </>\r\n                                        :\r\n                                        <Button type='button' size='sm' onClick={() => setEditImageUrl(true)}>Set image</Button>\r\n                                    }\r\n                                </>\r\n                                :\r\n                                <></>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <div>\r\n                            <Chat title={`userChat${username}`}></Chat>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfilePage","import React from 'react'\r\nimport { useRouteMatch } from 'react-router-dom'\r\n\r\nconst ErrorPage = () => {\r\n    const match = useRouteMatch('/error/:errormessage')\r\n    const errormessage = match ? match.params.errormessage : null\r\n\r\n    return (\r\n        <h2>{errormessage}</h2>\r\n    )\r\n}\r\n\r\nexport default ErrorPage","import React from 'react'\r\nimport ChatsPage from './ChatsPage'\r\nimport ReportedChatsPage from './ReportedChatsPage'\r\nimport ReportedCommentsPage from './ReportedCommentsPage'\r\nimport ChatPage from './ChatPage'\r\nimport ProfilePage from './ProfilePage'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport ErrorPage from './ErrorPage'\r\n\r\nconst LoggedInPage = () => {\r\n    return (\r\n        <div className='container' style={{ height: '100%' }}>\r\n            <Switch>\r\n                <Route path='/error/:errormessage'>\r\n                    <ErrorPage></ErrorPage>\r\n                </Route>\r\n                <Route path='/reported/chats'>\r\n                    <ReportedChatsPage></ReportedChatsPage>\r\n                </Route>\r\n                <Route path='/reported/comments'>\r\n                    <ReportedCommentsPage></ReportedCommentsPage>\r\n                </Route>\r\n                <Route path='/chats/:title'>\r\n                    <ChatPage></ChatPage>\r\n                </Route>\r\n                <Route path='/chats'>\r\n                    <ChatsPage></ChatsPage>\r\n                </Route>\r\n                <Route path='/users/:username'>\r\n                    <ProfilePage></ProfilePage>\r\n                </Route>\r\n                <Route path='/'>\r\n                    <Redirect to='/chats'></Redirect>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoggedInPage","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useMutation } from '@apollo/client'\r\nimport { SIGNIN } from '../queries/userqueries'\r\nimport Notification from './Notification'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { setToken } from '../reducers/tokenReducer'\r\nimport { setUser } from '../reducers/userReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, Link } from 'react-router-dom'\r\n\r\nconst SigninForm = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const mode = useSelector(state => state.mode)\r\n    const [signin, result] = useMutation(SIGNIN, {\r\n        onError: (error) => {\r\n            dispatch(setNotification({ message: error.graphQLErrors[0].message, error: true }, 10))\r\n        }\r\n    })\r\n    useEffect(() => {\r\n        if (result.data) {\r\n            const token = result.data.createUser.value\r\n            const user = result.data.createUser.user\r\n            dispatch(setToken(token))\r\n            localStorage.setItem('user-token', token)\r\n            history.push('/')\r\n            localStorage.setItem('logged-user', JSON.stringify(user))\r\n            dispatch(setUser(user))\r\n            dispatch(setNotification({ message: 'Signed in', error: false }, 10))\r\n        }\r\n    }, [result.data]) // eslint-disable-line\r\n    const submit = (event) => {\r\n        event.preventDefault()\r\n        signin({ variables: { username, password } })\r\n        setUsername('')\r\n        setPassword('')\r\n    }\r\n    const style = { borderColor: 'grey' }\r\n    if (mode === 'light') {\r\n        style.backgroundColor = 'white'\r\n    } else {\r\n        style.backgroundColor = 'darkgray'\r\n    }\r\n    return (\r\n        <>\r\n            <Notification></Notification>\r\n            <div className='container'>\r\n                <h2>Sign in</h2>\r\n                <Form onSubmit={submit}>\r\n                    <Form.Label>username:</Form.Label>\r\n                    <Form.Control type=\"text\" id='username' style={style} value={username} name=\"username\" onChange={({ target }) => setUsername(target.value)} required />\r\n                    <Form.Label>password:</Form.Label>\r\n                    <Form.Control type=\"password\" id='password' style={style} value={password} name=\"password\" onChange={({ target }) => setPassword(target.value)} required />\r\n                    <Button id='submit' type=\"submit\">sign in</Button> or <Link to='/login'>login</Link>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SigninForm","const reducer = (state = 'light', action) => {\r\n    switch (action.type) {\r\n        case 'SET_MODE': {\r\n            localStorage.setItem('mode', action.data)\r\n            return action.data\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setMode = (mode) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_MODE',\r\n            data: mode\r\n        })\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react'\r\nimport { Navbar, Nav, Button } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport Notification from './Notification'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setUser } from '../reducers/userReducer'\r\nimport { setToken } from '../reducers/tokenReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { setMode } from '../reducers/modeReducer'\r\n\r\nconst Navigationbar = () => {\r\n    const currentUser = useSelector(state => state.user)\r\n    const mode = useSelector(state => state.mode)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleLogout = () => {\r\n        window.localStorage.removeItem('user-token')\r\n        window.localStorage.removeItem('logged-user')\r\n        dispatch(setUser(null))\r\n        dispatch(setToken(''))\r\n        dispatch(setNotification({ message: 'Logged out', error: false }, 5))\r\n        history.push('/login')\r\n    }\r\n    if (currentUser) {\r\n        return (\r\n            <>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"\" as=\"span\">ChatForum</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"#\" as=\"span\">\r\n                                <Button variant=\"outline-info\" onClick={() => { history.push('/chats') }}>Chats</Button>\r\n                            </Nav.Link>\r\n                            {currentUser.admin ?\r\n                                <>\r\n                                    <Nav.Link href=\"#\" as=\"span\">\r\n                                        <Button variant=\"outline-info\" onClick={() => { history.push('/reported/chats') }}>Reported chats</Button>\r\n                                    </Nav.Link>\r\n                                    <Nav.Link href=\"#\" as=\"span\">\r\n                                        <Button variant=\"outline-info\" onClick={() => { history.push('/reported/comments') }}>Reported comments</Button>\r\n                                    </Nav.Link>\r\n                                </>\r\n                                :\r\n                                <></>\r\n                            }\r\n                            <Nav.Link href=\"#\" as=\"span\">\r\n                                {mode === 'light' ?\r\n                                    <Button variant=\"outline-info\" onClick={() => dispatch(setMode('dark'))}>Dark mode</Button>\r\n                                    :\r\n                                    <Button variant=\"outline-info\" onClick={() => dispatch(setMode('light'))}>Light mode</Button>\r\n                                }\r\n                            </Nav.Link>\r\n                            <Nav.Link href=\"#\" as=\"span\">\r\n                                <div><Link to={`/users/${currentUser.username}`}>{currentUser.username}</Link> logged in <Button variant=\"outline-info\" onClick={handleLogout}>logout</Button></div>\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <Notification></Notification>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"\" as=\"span\">ChatForum</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"#\" as=\"span\">\r\n                                {mode === 'light' ?\r\n                                    <Button variant=\"outline-info\" onClick={() => dispatch(setMode('dark'))}>Dark mode</Button>\r\n                                    :\r\n                                    <Button variant=\"outline-info\" onClick={() => dispatch(setMode('light'))}>Light mode</Button>\r\n                                }\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <Notification></Notification>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigationbar","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport LoginForm from './components/LoginForm'\r\nimport LoggedInPage from './components/LoggedInPage'\r\nimport SigninForm from './components/SigninForm'\r\nimport Navgationbar from './components/Navigationbar'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst App = () => {\r\n    const token = useSelector(state => state.token)\r\n    const mode = useSelector(state => state.mode)\r\n    const style = {\r\n        width: '100%',\r\n        height: '100%',\r\n        left: 0,\r\n        top: 0,\r\n        zIndex: 10\r\n    }\r\n    if (mode === 'light') {\r\n        document.body.style.backgroundColor = 'white'\r\n\r\n    } else {\r\n        document.body.style.backgroundColor = 'darkgray'\r\n    }\r\n    return (\r\n        <div style={style}>\r\n            <Navgationbar></Navgationbar>\r\n            <Switch>\r\n                <Route path='/signin'>\r\n                    {token ?\r\n                        <Redirect to='/chats'></Redirect>\r\n                        :\r\n                        <SigninForm></SigninForm>\r\n                    }\r\n                </Route>\r\n                <Route path='/login'>\r\n                    {token ?\r\n                        <Redirect to='/chats'></Redirect>\r\n                        :\r\n                        <LoginForm></LoginForm>\r\n                    }\r\n                </Route>\r\n                <Route path='/'>\r\n                    {token ?\r\n                        <>\r\n                            <LoggedInPage></LoggedInPage>\r\n                        </>\r\n                        :\r\n                        <Redirect to='/login'></Redirect>\r\n                    }\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport tokenReducer from './reducers/tokenReducer'\r\nimport modeReducer from './reducers/modeReducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst reducer = combineReducers({\r\n    notification: notificationReducer,\r\n    user: userReducer,\r\n    token: tokenReducer,\r\n    mode: modeReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store"],"sourceRoot":""}